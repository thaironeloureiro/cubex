name: Build
on:
  push:
    branches:
      - master
  pull_request:
    types: [opened, synchronize, reopened]
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Install Arduino CLI        
        run: |                    
          wget http://downloads.arduino.cc/arduino-cli/arduino-cli_latest_Linux_64bit.tar.gz
          tar xf arduino-cli_latest_Linux_64bit.tar.gz
          mkdir -p $HOME/bin
          mv arduino-cli $HOME/bin/arduino-cli
          export PATH=$PATH:$HOME/bin
          arduino-cli config init --additional-urls https://downloads.arduino.cc/packages/package_staging_index.json
          arduino-cli config set library.enable_unsafe_install true
          arduino-cli config dump
          arduino-cli core update-index
          arduino-cli core install arduino:avr
          arduino-cli core install arduino:megaavr
          arduino-cli lib install Servo
          arduino-cli lib install --zip-path HMC5883L.zip
          arduino-cli lib install --zip-path NewPing.zip
          mkdir -p $HOME/Arduino/libraries
          
      - name: Get the version
        id: version
        if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/')
        run: |
          echo ::set-output name=version::${GITHUB_REF/refs\/tags\//}   
  
      - name: Set VERSION variable
        if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/') && steps.version.outputs.version != ''
        run: |
          *sed -Ei "s/#define VERSION \".+\"/#define VERSION \"${{ steps.version.outputs.version }}\"/" includes/parameters.h          

      - name: Build wrapper
        run: |
          curl -L -O https://sonarcloud.io/static/cpp/build-wrapper-linux-x86.zip
          unzip -o build-wrapper-linux-x86.zip
          echo "build-wrapper-linux-x86/build-wrapper-linux-x86-64 --out-dir $PWD/build bash sonarcloud/build.sh"
          build-wrapper-linux-x86/build-wrapper-linux-x86-64 --out-dir $PWD/build bash sonarcloud/build.sh
          
          echo "cat $PWD/build/build-wrapper-dump.json"
          cat $PWD/build/build-wrapper-dump.json
          echo "rm $PWD/build/build-wrapper-dump.json"
          rm $PWD/build/build-wrapper-dump.json          
          
          echo "-------- usando convert-compile-commands.py ------"
          echo "$PWD/build"
          echo "python convert-compile-commands.py $PWD/build/compile_commands.json"
          python convert-compile-commands.py $PWD/build/compile_commands.json
          ls -l cfamily-compilation-database
          cp cfamily-compilation-database/build-wrapper-dump.json $PWD/build/build-wrapper-dump.json
          echo "--------------------------------------------------"

      - name: Qualidade_Codigo
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          echo ">>>>>> bash sonarcloud/build.sh"
          bash sonarcloud/sonar.sh
      
#  sonarcloud:
#      name: SonarCloud
#      runs-on: ubuntu-latest
#      steps:
#      - uses: actions/checkout@v2
#        with:
#          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
#      - name: SonarCloud Scan
#        uses: SonarSource/sonarcloud-github-action@master
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
#          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
